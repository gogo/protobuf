// Copyright (c) 2013, Vastech SA (PTY) LTD. All rights reserved.
// http://github.com/gogo/protobuf/gogoproto
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";
package validatortest;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message ValidatorMessage3 {
	message Embedded {
		string Identifier = 1 [(gogoproto.validator) = {regex: "^[a-z]{2,5}$"}];
		int64 SomeValue = 2 [(gogoproto.validator) = {int_gt: 0, int_lt: 100}];
	}
	string SomeString = 1 [(gogoproto.validator) = {regex: "^.{2,5}$"}];
	repeated string SomeStringRep = 2 [(gogoproto.validator) = {regex: "^.{2,5}$"}];

	uint32 SomeInt = 6  [(gogoproto.validator) = {int_gt: 10}];
	repeated uint32 SomeIntRep = 7  [(gogoproto.validator) = {int_gt: 10}];
	repeated uint32 SomeIntRepNonNull = 8 [(gogoproto.validator) = {int_gt: 10}, (gogoproto.nullable) = false];

	Embedded someEmbedded = 10;
	Embedded someEmbeddedNonNullable = 11 [(gogoproto.nullable) = false];
	Embedded someEmbeddedExists = 12  [(gogoproto.validator) = {msg_exists : true}];
	Embedded someEmbeddedExistsNonNullable = 13  [(gogoproto.nullable) = false, (gogoproto.validator) = {msg_exists:true}];
	repeated Embedded someEmbeddedRep = 14;
	repeated Embedded someEmbeddedRepNonNullable = 15 [(gogoproto.nullable) = false];
}
