// Copyright 2019 Authors of X3m IoT
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package customname;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";

message Bar {
    string id = 1 [(gogoproto.customname) = "ID"];
    string name = 2;
}

message Foo {
    string id = 1 [(gogoproto.customname) = "ID"];
    string url = 2 [(gogoproto.customname) = "URL"];
    string name = 3;
}

service A {
    rpc GetBar (GetBarRequest) returns (GetBarResponse) {
        option (google.api.http) = {
            get: "/api/v1/bar/{id}"
        };
    }
    rpc DeleteBar (DeleteBarRequest) returns (DeleteBarResponse) {
        option (google.api.http) = {
            delete: "/api/v1/bar/{id}"
        };
    }

    rpc GetFoo (GetFooRequest) returns (GetFooResponse) {
        option (google.api.http) = {
            get: "/api/v1/foo/{id}"
        };
    }
    rpc UpdateFoo (UpdateFooRequest) returns (UpdateFooResponse) {
        option (google.api.http) = {
            put: "/api/v1/foo/{foo.id}"
            body: "*"
        };
    }
}

message GetBarRequest {
    string id = 1 [(gogoproto.customname) = "IDBartender"];
}

message GetBarResponse {
    Bar bar = 1;
}

message DeleteBarRequest {
    string id = 1 [(gogoproto.customname) = "IDBartenderToDelete"];
}

message DeleteBarResponse {}

message GetFooRequest {
    string id = 1 [(gogoproto.customname) = "IDFoofighter"];
}

message GetFooResponse {
    Foo foo = 1;
}

message UpdateFooRequest {
    Foo foo = 1;
}

message UpdateFooResponse {
    Foo foo = 1;
}