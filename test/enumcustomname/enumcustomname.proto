syntax = "proto2";

// Package enumcustomname tests the behavior of enum_customname and
// enumvalue_customname extensions.
package enumcustomname;

import "github.com/nourish/protobuf/gogoproto/gogo.proto";
import "github.com/nourish/protobuf/test/thetest.proto";

enum MyEnum {
	option (gogoproto.enum_customname) = "MyCustomEnum";

	// The following field will take on the custom name and the prefix, joined
	// by an underscore.
	A = 0 [(gogoproto.enumvalue_customname) = "MyBetterNameA"];
	B = 1; // Should be MyCustomEnum_B
}

enum MyUnprefixedEnum {
	option (gogoproto.goproto_enum_prefix) = false;
	option (gogoproto.goproto_enum_stringer) = false; // ensure it behaves correctly without stringer.
	option (gogoproto.enum_customname) = "MyCustomUnprefixedEnum"; // no prefix added but type gets name
	UNPREFIXED_A = 0 [(gogoproto.enumvalue_customname) = "MyBetterNameUnprefixedA"];
	UNPREFIXED_B = 1 ; // Should not pick up prefix above
}

enum MyEnumWithEnumStringer {
	option (gogoproto.goproto_enum_stringer) = false; // ensure it behaves correctly without stringer.
	option (gogoproto.enum_stringer) = true; // ensure it behaves correctly without stringer.
	STRINGER_A = 0 [(gogoproto.enumvalue_customname) = "EnumValueStringerA"];
	STRINGER_B = 1;
}

message OnlyEnums {
	optional MyEnum my_enum = 1;
	optional MyEnum my_enum_default_a = 2 [default=A];
	optional MyEnum my_enum_default_b = 3 [default=B];
	optional MyUnprefixedEnum my_unprefixed_enum = 4;
	optional MyUnprefixedEnum my_unprefixed_enum_default_a = 5 [default=UNPREFIXED_A];
	optional MyUnprefixedEnum my_unprefixed_enum_default_b = 6 [default=UNPREFIXED_B];
	optional test.YetAnotherTestEnum yet_another_test_enum = 7;
	optional test.YetAnotherTestEnum yet_another_test_enum_default_aa = 8 [default=AA];
	optional test.YetAnotherTestEnum yet_another_test_enum_default_bb = 9 [default=BB];
	optional test.YetYetAnotherTestEnum yet_yet_another_test_enum = 10;
	optional test.YetYetAnotherTestEnum yet_yet_another_test_enum_default_cc = 11 [default=CC];
	optional test.YetYetAnotherTestEnum yet_yet_another_test_enum_default_dd = 12 [default=DD];
}
