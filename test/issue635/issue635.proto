// Protocol Buffers for Go with Gadgets
//
// Copyright (c) 2015, The GoGo Authors. All rights reserved.
// http://github.com/gogo/protobuf
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto2";

package issue635;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/gogo/protobuf/test/thetest.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.testgen_all) = true;

message EnumNullable {
  optional TheEnum TheEnum = 1 [(gogoproto.nullable) = true];
}

message EnumNonNullable {
	optional TheEnum TheEnum = 1 [(gogoproto.nullable) = false];
}

message EnumNullableRepeated {
	repeated TheEnum TheEnum = 1 [(gogoproto.nullable) = true];
}

message EnumNullableDifferentPackage {
	optional test.TheTestEnum TheEnum = 1 [(gogoproto.nullable) = true];
}

message EnumNullableNested {
	optional NestedDefinition.NestedEnum NestedEnum = 1 [(gogoproto.nullable) = true];
}

message NestedDefinition {
	enum NestedEnum {
		TYPE_NESTED = 1;
	}
}

enum TheEnum {
	TheEnum0 = 0;
}

message StringNullable {
	optional string TheString = 1 [(gogoproto.nullable) = true];
}

message StringNonNullable {
	optional string TheString = 1 [(gogoproto.nullable) = false];
}

message StringNullableRepeated {
	repeated string TheString = 1 [(gogoproto.nullable) = true];
}