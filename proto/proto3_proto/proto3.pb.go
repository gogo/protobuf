// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto3.proto

/*
Package proto3_proto is a generated protocol buffer package.

It is generated from these files:
	proto3.proto

It has these top-level messages:
	Message
	Nested
	MessageWithMap
	IntMap
	IntMaps
*/
package proto3_proto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/gogo/protobuf/types"
import test_proto "github.com/gogo/protobuf/proto/test_proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Message_Humour int32

const (
	Message_UNKNOWN     Message_Humour = 0
	Message_PUNS        Message_Humour = 1
	Message_SLAPSTICK   Message_Humour = 2
	Message_BILL_BAILEY Message_Humour = 3
)

var Message_Humour_name = map[int32]string{
	0: "UNKNOWN",
	1: "PUNS",
	2: "SLAPSTICK",
	3: "BILL_BAILEY",
}
var Message_Humour_value = map[string]int32{
	"UNKNOWN":     0,
	"PUNS":        1,
	"SLAPSTICK":   2,
	"BILL_BAILEY": 3,
}

func (x Message_Humour) String() string {
	return proto.EnumName(Message_Humour_name, int32(x))
}
func (Message_Humour) EnumDescriptor() ([]byte, []int) { return fileDescriptorProto3, []int{0, 0} }

type Message struct {
	Name                 string                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hilarity             Message_Humour                     `protobuf:"varint,2,opt,name=hilarity,proto3,enum=proto3_proto.Message_Humour" json:"hilarity,omitempty"`
	HeightInCm           uint32                             `protobuf:"varint,3,opt,name=height_in_cm,json=heightInCm,proto3" json:"height_in_cm,omitempty"`
	Data                 []byte                             `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	ResultCount          int64                              `protobuf:"varint,7,opt,name=result_count,json=resultCount,proto3" json:"result_count,omitempty"`
	TrueScotsman         bool                               `protobuf:"varint,8,opt,name=true_scotsman,json=trueScotsman,proto3" json:"true_scotsman,omitempty"`
	Score                float32                            `protobuf:"fixed32,9,opt,name=score,proto3" json:"score,omitempty"`
	Key                  []uint64                           `protobuf:"varint,5,rep,packed,name=key" json:"key,omitempty"`
	ShortKey             []int32                            `protobuf:"varint,19,rep,packed,name=short_key,json=shortKey" json:"short_key,omitempty"`
	Nested               *Nested                            `protobuf:"bytes,6,opt,name=nested" json:"nested,omitempty"`
	RFunny               []Message_Humour                   `protobuf:"varint,16,rep,packed,name=r_funny,json=rFunny,enum=proto3_proto.Message_Humour" json:"r_funny,omitempty"`
	Terrain              map[string]*Nested                 `protobuf:"bytes,10,rep,name=terrain" json:"terrain,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	Proto2Field          *test_proto.SubDefaults            `protobuf:"bytes,11,opt,name=proto2_field,json=proto2Field" json:"proto2_field,omitempty"`
	Proto2Value          map[string]*test_proto.SubDefaults `protobuf:"bytes,13,rep,name=proto2_value,json=proto2Value" json:"proto2_value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	Anything             *google_protobuf.Any               `protobuf:"bytes,14,opt,name=anything" json:"anything,omitempty"`
	ManyThings           []*google_protobuf.Any             `protobuf:"bytes,15,rep,name=many_things,json=manyThings" json:"many_things,omitempty"`
	Submessage           *Message                           `protobuf:"bytes,17,opt,name=submessage" json:"submessage,omitempty"`
	Children             []*Message                         `protobuf:"bytes,18,rep,name=children" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `protobuf_unrecognized:"proto3" json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptorProto3, []int{0} }
func (m *Message) Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Message) GetHilarity() Message_Humour {
	if m != nil {
		return m.Hilarity
	}
	return Message_UNKNOWN
}

func (m *Message) GetHeightInCm() uint32 {
	if m != nil {
		return m.HeightInCm
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Message) GetResultCount() int64 {
	if m != nil {
		return m.ResultCount
	}
	return 0
}

func (m *Message) GetTrueScotsman() bool {
	if m != nil {
		return m.TrueScotsman
	}
	return false
}

func (m *Message) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Message) GetKey() []uint64 {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Message) GetShortKey() []int32 {
	if m != nil {
		return m.ShortKey
	}
	return nil
}

func (m *Message) GetNested() *Nested {
	if m != nil {
		return m.Nested
	}
	return nil
}

func (m *Message) GetRFunny() []Message_Humour {
	if m != nil {
		return m.RFunny
	}
	return nil
}

func (m *Message) GetTerrain() map[string]*Nested {
	if m != nil {
		return m.Terrain
	}
	return nil
}

func (m *Message) GetProto2Field() *test_proto.SubDefaults {
	if m != nil {
		return m.Proto2Field
	}
	return nil
}

func (m *Message) GetProto2Value() map[string]*test_proto.SubDefaults {
	if m != nil {
		return m.Proto2Value
	}
	return nil
}

func (m *Message) GetAnything() *google_protobuf.Any {
	if m != nil {
		return m.Anything
	}
	return nil
}

func (m *Message) GetManyThings() []*google_protobuf.Any {
	if m != nil {
		return m.ManyThings
	}
	return nil
}

func (m *Message) GetSubmessage() *Message {
	if m != nil {
		return m.Submessage
	}
	return nil
}

func (m *Message) GetChildren() []*Message {
	if m != nil {
		return m.Children
	}
	return nil
}

type Nested struct {
	Bunny                string   `protobuf:"bytes,1,opt,name=bunny,proto3" json:"bunny,omitempty"`
	Cute                 bool     `protobuf:"varint,2,opt,name=cute,proto3" json:"cute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `protobuf_unrecognized:"proto3" json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nested) Reset()                    { *m = Nested{} }
func (m *Nested) String() string            { return proto.CompactTextString(m) }
func (*Nested) ProtoMessage()               {}
func (*Nested) Descriptor() ([]byte, []int) { return fileDescriptorProto3, []int{1} }
func (m *Nested) Unmarshal(b []byte) error {
	return xxx_messageInfo_Nested.Unmarshal(m, b)
}
func (m *Nested) Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nested.Marshal(b, m, deterministic)
}
func (dst *Nested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nested.Merge(dst, src)
}
func (m *Nested) XXX_Size() int {
	return xxx_messageInfo_Nested.Size(m)
}
func (m *Nested) XXX_DiscardUnknown() {
	xxx_messageInfo_Nested.DiscardUnknown(m)
}

var xxx_messageInfo_Nested proto.InternalMessageInfo

func (m *Nested) GetBunny() string {
	if m != nil {
		return m.Bunny
	}
	return ""
}

func (m *Nested) GetCute() bool {
	if m != nil {
		return m.Cute
	}
	return false
}

type MessageWithMap struct {
	ByteMapping          map[bool][]byte `protobuf:"bytes,1,rep,name=byte_mapping,json=byteMapping" json:"byte_mapping,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `protobuf_unrecognized:"proto3" json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MessageWithMap) Reset()                    { *m = MessageWithMap{} }
func (m *MessageWithMap) String() string            { return proto.CompactTextString(m) }
func (*MessageWithMap) ProtoMessage()               {}
func (*MessageWithMap) Descriptor() ([]byte, []int) { return fileDescriptorProto3, []int{2} }
func (m *MessageWithMap) Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageWithMap.Unmarshal(m, b)
}
func (m *MessageWithMap) Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageWithMap.Marshal(b, m, deterministic)
}
func (dst *MessageWithMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageWithMap.Merge(dst, src)
}
func (m *MessageWithMap) XXX_Size() int {
	return xxx_messageInfo_MessageWithMap.Size(m)
}
func (m *MessageWithMap) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageWithMap.DiscardUnknown(m)
}

var xxx_messageInfo_MessageWithMap proto.InternalMessageInfo

func (m *MessageWithMap) GetByteMapping() map[bool][]byte {
	if m != nil {
		return m.ByteMapping
	}
	return nil
}

type IntMap struct {
	Rtt                  map[int32]int32 `protobuf:"bytes,1,rep,name=rtt" json:"rtt,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `protobuf_unrecognized:"proto3" json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *IntMap) Reset()                    { *m = IntMap{} }
func (m *IntMap) String() string            { return proto.CompactTextString(m) }
func (*IntMap) ProtoMessage()               {}
func (*IntMap) Descriptor() ([]byte, []int) { return fileDescriptorProto3, []int{3} }
func (m *IntMap) Unmarshal(b []byte) error {
	return xxx_messageInfo_IntMap.Unmarshal(m, b)
}
func (m *IntMap) Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntMap.Marshal(b, m, deterministic)
}
func (dst *IntMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntMap.Merge(dst, src)
}
func (m *IntMap) XXX_Size() int {
	return xxx_messageInfo_IntMap.Size(m)
}
func (m *IntMap) XXX_DiscardUnknown() {
	xxx_messageInfo_IntMap.DiscardUnknown(m)
}

var xxx_messageInfo_IntMap proto.InternalMessageInfo

func (m *IntMap) GetRtt() map[int32]int32 {
	if m != nil {
		return m.Rtt
	}
	return nil
}

type IntMaps struct {
	Maps                 []*IntMap `protobuf:"bytes,1,rep,name=maps" json:"maps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `protobuf_unrecognized:"proto3" json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IntMaps) Reset()                    { *m = IntMaps{} }
func (m *IntMaps) String() string            { return proto.CompactTextString(m) }
func (*IntMaps) ProtoMessage()               {}
func (*IntMaps) Descriptor() ([]byte, []int) { return fileDescriptorProto3, []int{4} }
func (m *IntMaps) Unmarshal(b []byte) error {
	return xxx_messageInfo_IntMaps.Unmarshal(m, b)
}
func (m *IntMaps) Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntMaps.Marshal(b, m, deterministic)
}
func (dst *IntMaps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntMaps.Merge(dst, src)
}
func (m *IntMaps) XXX_Size() int {
	return xxx_messageInfo_IntMaps.Size(m)
}
func (m *IntMaps) XXX_DiscardUnknown() {
	xxx_messageInfo_IntMaps.DiscardUnknown(m)
}

var xxx_messageInfo_IntMaps proto.InternalMessageInfo

func (m *IntMaps) GetMaps() []*IntMap {
	if m != nil {
		return m.Maps
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "proto3_proto.Message")
	proto.RegisterMapType((map[string]*test_proto.SubDefaults)(nil), "proto3_proto.Message.Proto2ValueEntry")
	proto.RegisterMapType((map[string]*Nested)(nil), "proto3_proto.Message.TerrainEntry")
	proto.RegisterType((*Nested)(nil), "proto3_proto.Nested")
	proto.RegisterType((*MessageWithMap)(nil), "proto3_proto.MessageWithMap")
	proto.RegisterMapType((map[bool][]byte)(nil), "proto3_proto.MessageWithMap.ByteMappingEntry")
	proto.RegisterType((*IntMap)(nil), "proto3_proto.IntMap")
	proto.RegisterMapType((map[int32]int32)(nil), "proto3_proto.IntMap.RttEntry")
	proto.RegisterType((*IntMaps)(nil), "proto3_proto.IntMaps")
	proto.RegisterEnum("proto3_proto.Message_Humour", Message_Humour_name, Message_Humour_value)
}

func init() { proto.RegisterFile("proto3.proto", fileDescriptorProto3) }

var fileDescriptorProto3 = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x5f, 0x6f, 0xdb, 0x36,
	0x14, 0xc5, 0x27, 0xcb, 0x7f, 0xe4, 0x2b, 0x39, 0xd1, 0x38, 0x07, 0xe3, 0xbc, 0x0d, 0xd0, 0x3c,
	0x60, 0x10, 0x86, 0x45, 0xde, 0x1c, 0x64, 0x08, 0x82, 0xa2, 0x45, 0x92, 0x26, 0xa8, 0x11, 0xc7,
	0x35, 0xe8, 0xa4, 0x41, 0x9f, 0x04, 0xd9, 0xa6, 0x6d, 0xa1, 0x16, 0xe5, 0x4a, 0x54, 0x01, 0x3d,
	0xf7, 0x9b, 0xf4, 0x93, 0x16, 0x22, 0x65, 0x47, 0x09, 0x94, 0xf6, 0x49, 0xe4, 0xd5, 0xef, 0xf2,
	0x1c, 0x1d, 0x5d, 0x82, 0xb1, 0x89, 0x42, 0x1e, 0x1e, 0x39, 0xe2, 0x81, 0xf2, 0x9d, 0x2b, 0x1e,
	0x9d, 0x5f, 0x96, 0x61, 0xb8, 0x5c, 0xd3, 0x9e, 0xd8, 0x4d, 0x93, 0x45, 0xcf, 0x63, 0xa9, 0x04,
	0x3b, 0x07, 0x9c, 0xc6, 0x5c, 0x62, 0xbd, 0x6c, 0x29, 0xcb, 0xdd, 0xcf, 0x1a, 0x34, 0x6e, 0x68,
	0x1c, 0x7b, 0x4b, 0x8a, 0x10, 0x54, 0x99, 0x17, 0x50, 0xac, 0x58, 0x8a, 0xdd, 0x24, 0x62, 0x8d,
	0x4e, 0x40, 0x5b, 0xf9, 0x6b, 0x2f, 0xf2, 0x79, 0x8a, 0x2b, 0x96, 0x62, 0xef, 0xf5, 0x7f, 0x73,
	0x8a, 0x92, 0x4e, 0xde, 0xec, 0xbc, 0x49, 0x82, 0x30, 0x89, 0xc8, 0x8e, 0x46, 0x16, 0x18, 0x2b,
	0xea, 0x2f, 0x57, 0xdc, 0xf5, 0x99, 0x3b, 0x0b, 0xb0, 0x6a, 0x29, 0x76, 0x8b, 0x80, 0xac, 0x0d,
	0xd8, 0x45, 0x90, 0xe9, 0xcd, 0x3d, 0xee, 0xe1, 0xaa, 0xa5, 0xd8, 0x06, 0x11, 0x6b, 0xf4, 0x07,
	0x18, 0x11, 0x8d, 0x93, 0x35, 0x77, 0x67, 0x61, 0xc2, 0x38, 0x6e, 0x58, 0x8a, 0xad, 0x12, 0x5d,
	0xd6, 0x2e, 0xb2, 0x12, 0xfa, 0x13, 0x5a, 0x3c, 0x4a, 0xa8, 0x1b, 0xcf, 0x42, 0x1e, 0x07, 0x1e,
	0xc3, 0x9a, 0xa5, 0xd8, 0x1a, 0x31, 0xb2, 0xe2, 0x24, 0xaf, 0xa1, 0x36, 0xd4, 0xe2, 0x59, 0x18,
	0x51, 0xdc, 0xb4, 0x14, 0xbb, 0x42, 0xe4, 0x06, 0x99, 0xa0, 0x7e, 0xa0, 0x29, 0xae, 0x59, 0xaa,
	0x5d, 0x25, 0xd9, 0x12, 0xfd, 0x0a, 0xcd, 0x78, 0x15, 0x46, 0xdc, 0xcd, 0xea, 0x3f, 0x59, 0xaa,
	0x5d, 0x23, 0x9a, 0x28, 0x5c, 0xd3, 0x14, 0xfd, 0x03, 0x75, 0x46, 0x63, 0x4e, 0xe7, 0xb8, 0x6e,
	0x29, 0xb6, 0xde, 0x6f, 0x3f, 0xfe, 0xf4, 0x91, 0x78, 0x47, 0x72, 0x06, 0x1d, 0x43, 0x23, 0x72,
	0x17, 0x09, 0x63, 0x29, 0x36, 0x2d, 0xf5, 0xbb, 0x49, 0xd5, 0xa3, 0xab, 0x8c, 0x45, 0x2f, 0xa0,
	0xc1, 0x69, 0x14, 0x79, 0x3e, 0xc3, 0x60, 0xa9, 0xb6, 0xde, 0xef, 0x96, 0xb7, 0xdd, 0x4a, 0xe8,
	0x92, 0xf1, 0x28, 0x25, 0xdb, 0x16, 0x74, 0x9a, 0xcf, 0x43, 0xdf, 0x5d, 0xf8, 0x74, 0x3d, 0xc7,
	0xba, 0x30, 0xfa, 0xb3, 0xf3, 0xf0, 0xb7, 0x9d, 0x49, 0x32, 0x7d, 0x4d, 0x17, 0x5e, 0xb2, 0xe6,
	0x31, 0xd1, 0x25, 0x7c, 0x95, 0xb1, 0x68, 0xb0, 0xeb, 0xfd, 0xe4, 0xad, 0x13, 0x8a, 0x5b, 0x42,
	0xfe, 0xaf, 0x72, 0xf9, 0xb1, 0x20, 0xdf, 0x65, 0xa0, 0xb4, 0x90, 0x1f, 0x25, 0x2a, 0xe8, 0x5f,
	0xd0, 0x3c, 0x96, 0xf2, 0x95, 0xcf, 0x96, 0x78, 0x2f, 0xcf, 0x4a, 0xce, 0xa2, 0xb3, 0x9d, 0x45,
	0xe7, 0x8c, 0xa5, 0x64, 0x47, 0xa1, 0x63, 0xd0, 0x03, 0x8f, 0xa5, 0xae, 0xd8, 0xc5, 0x78, 0x5f,
	0x68, 0x97, 0x37, 0x41, 0x06, 0xde, 0x0a, 0x0e, 0x1d, 0x03, 0xc4, 0xc9, 0x34, 0x90, 0xa6, 0xf0,
	0x8f, 0x42, 0xea, 0xa0, 0xd4, 0x31, 0x29, 0x80, 0xe8, 0x3f, 0xd0, 0x66, 0x2b, 0x7f, 0x3d, 0x8f,
	0x28, 0xc3, 0x48, 0x48, 0x3d, 0xd3, 0xb4, 0xc3, 0x3a, 0x63, 0x30, 0x8a, 0x91, 0x6f, 0x67, 0x47,
	0x5e, 0x0e, 0x31, 0x3b, 0x7f, 0x43, 0x4d, 0x06, 0x57, 0xf9, 0xc6, 0x74, 0x48, 0xe4, 0xb4, 0x72,
	0xa2, 0x74, 0xee, 0xc1, 0x7c, 0x9a, 0x62, 0xc9, 0xa9, 0x87, 0x8f, 0x4f, 0x7d, 0xf6, 0x57, 0x3e,
	0x1c, 0xdc, 0x7d, 0x05, 0x75, 0x39, 0x54, 0x48, 0x87, 0xc6, 0xdd, 0xe8, 0x7a, 0xf4, 0xf6, 0x7e,
	0x64, 0xfe, 0x80, 0x34, 0xa8, 0x8e, 0xef, 0x46, 0x13, 0x53, 0x41, 0x2d, 0x68, 0x4e, 0x86, 0x67,
	0xe3, 0xc9, 0xed, 0xe0, 0xe2, 0xda, 0xac, 0xa0, 0x7d, 0xd0, 0xcf, 0x07, 0xc3, 0xa1, 0x7b, 0x7e,
	0x36, 0x18, 0x5e, 0xbe, 0x37, 0xd5, 0x6e, 0x1f, 0xea, 0xd2, 0x6e, 0x76, 0x6f, 0xa6, 0x62, 0x84,
	0xa5, 0x23, 0xb9, 0xc9, 0x6e, 0xea, 0x2c, 0xe1, 0xd2, 0x92, 0x46, 0xc4, 0xba, 0xfb, 0x45, 0x81,
	0xbd, 0x3c, 0xb5, 0x7b, 0x9f, 0xaf, 0x6e, 0xbc, 0x0d, 0x1a, 0x83, 0x31, 0x4d, 0x39, 0x75, 0x03,
	0x6f, 0xb3, 0xc9, 0x26, 0x41, 0x11, 0x49, 0x1f, 0x96, 0x26, 0x9d, 0xf7, 0x38, 0xe7, 0x29, 0xa7,
	0x37, 0x92, 0xcf, 0xe7, 0x6a, 0xfa, 0x50, 0xe9, 0xbc, 0x04, 0xf3, 0x29, 0x50, 0x8c, 0x4c, 0x93,
	0x91, 0xb5, 0x8b, 0x91, 0x19, 0xc5, 0x64, 0x3e, 0x42, 0x7d, 0xc0, 0x78, 0xe6, 0xad, 0x07, 0x6a,
	0xc4, 0x79, 0x6e, 0xe9, 0xf7, 0xc7, 0x96, 0x24, 0xe2, 0x10, 0xce, 0xa5, 0x85, 0x8c, 0xec, 0xfc,
	0x0f, 0xda, 0xb6, 0x50, 0x94, 0xac, 0x95, 0x48, 0xd6, 0x8a, 0x92, 0x47, 0xd0, 0x90, 0xe7, 0xc5,
	0xc8, 0x86, 0x6a, 0xe0, 0x6d, 0xe2, 0x5c, 0xb4, 0x5d, 0x26, 0x4a, 0x04, 0x31, 0xad, 0xcb, 0x57,
	0x5f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x8a, 0xfa, 0x9c, 0xdd, 0x05, 0x00, 0x00,
}
